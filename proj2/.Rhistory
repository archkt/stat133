geom_tile(aes(fill=commit), color = 'white') +
scale_fill_continuous(low = "#ededed", high = "#10570a") +
theme_classic() +
labs(title = "number of commits")
plot
plot = ggplot(dat, aes(x=month, y=y_axis)) +
geom_tile(aes(fill=commit), color = 'white') +
scale_fill_continuous(low = "#ededed", high = "#10570a") +
theme_classic() +
labs(title = "number of commits")
plot
plot = ggplot(dat, aes(x=week_counter, y=y_axis)) +
geom_tile(aes(fill=commit), color = 'white') +
scale_fill_continuous(low = "#ededed", high = "#10570a") +
theme_classic() +
labs(title = "number of commits")
plot
plot = ggplot(dat, aes(x=week_counter, y=y_axis)) +
geom_tile(aes(fill=commit), color = 'white') +
scale_fill_continuous(low = "#ededed", high = "#10570a") +
theme_classic() +
labs(title = "number of commits", y="", x="")
plot
plot = ggplot(dat, aes(x=week_counter, y=y_axis)) +
geom_tile(aes(fill=commit), color = 'white') +
scale_fill_continuous(low = "#ededed", high = "#10570a") +
theme_classic() +
labs(title = "number of commits", y="", x="week")
plot
plot = ggplot(dat, aes(x=week_counter, y=y_axis)) +
geom_tile(aes(fill=commit), color = 'white') +
scale_fill_continuous(low = "#ededed", high = "#10570a") +
coord_fixed() +
theme_classic() +
labs(title = "number of commits", y="", x="week")
plot
plot = ggplot(dat, aes(x=week_counter, y=y_axis)) +
geom_tile(aes(fill=commit), color = 'white', lwd=1.5) +
scale_fill_continuous(low = "#ededed", high = "#10570a") +
coord_fixed() +
theme_classic() +
labs(title = "number of commits", y="", x="week")
plot
plot = ggplot(dat, aes(x=week_counter, y=y_axis)) +
geom_tile(aes(fill=commit), color = 'white') +
scale_fill_continuous(low = "#ededed", high = "#10570a") +
coord_fixed() +
theme_classic() +
labs(title = "number of commits", y="", x="week")
plot
plot = ggplot(dat, aes(x=week_counter, y=y_axis)) +
geom_tile(aes(fill=commit), color = 'white') +
scale_fill_continuous(low = "#ededed", high = "#10570a") +
coord_fixed() +
theme_classic() +
labs(title = "number of commits past year", y="", x="week")
plot
year_month = c(rep("Oct", 8), rep("Nov", 30), rep("Dec", 31),
rep("Jan", 31), rep("Feb", 28), rep("Mar", 31),
rep("Apr", 30), rep("May", 31), rep("Jun", 30),
rep("Jul", 31), rep("Aug", 31), rep("Sep", 30),
rep("Oct", 22))
year_day = c(c(24:31), c(1:30), c(1:31),
c(1:31), c(1:28), c(1:31),
c(1:30), c(1:31), c(1:30),
c(1:31), c(1:31), c(1:30),
c(1:22))
# commit numbers are initialized random
probs = c(.6, rep(.04, 10))
commit = sample(0:10, 364, replace=TRUE, prob = probs)
#create day counter
day_counter = c(0:363)
#Create table
dat = data.frame(month = year_month, day = year_day, commit = commit, day_counter)
#add week_counter column using day_counter to arrange y = 7
dat = dat %>%
mutate(week_counter = day_counter %/% 7 + 1)
dat$y_axis = rep(1:7, 52)
dat = dat %>%
group_by(week_counter) %>%
summarise(commit)
year_month = c(rep("Oct", 8), rep("Nov", 30), rep("Dec", 31),
rep("Jan", 31), rep("Feb", 28), rep("Mar", 31),
rep("Apr", 30), rep("May", 31), rep("Jun", 30),
rep("Jul", 31), rep("Aug", 31), rep("Sep", 30),
rep("Oct", 22))
year_day = c(c(24:31), c(1:30), c(1:31),
c(1:31), c(1:28), c(1:31),
c(1:30), c(1:31), c(1:30),
c(1:31), c(1:31), c(1:30),
c(1:22))
# commit numbers are initialized random
probs = c(.6, rep(.04, 10))
commit = sample(0:10, 364, replace=TRUE, prob = probs)
#create day counter
day_counter = c(0:363)
#Create table
dat = data.frame(month = year_month, day = year_day, commit = commit, day_counter)
#add week_counter column using day_counter to arrange y = 7
dat = dat %>%
mutate(week_counter = day_counter %/% 7 + 1)
dat$y_axis = rep(1:7, 52)
dat %>%
group_by(week_counter) %>%
summarise(commit)
year_month = c(rep("Oct", 8), rep("Nov", 30), rep("Dec", 31),
rep("Jan", 31), rep("Feb", 28), rep("Mar", 31),
rep("Apr", 30), rep("May", 31), rep("Jun", 30),
rep("Jul", 31), rep("Aug", 31), rep("Sep", 30),
rep("Oct", 22))
year_day = c(c(24:31), c(1:30), c(1:31),
c(1:31), c(1:28), c(1:31),
c(1:30), c(1:31), c(1:30),
c(1:31), c(1:31), c(1:30),
c(1:22))
# commit numbers are initialized random
probs = c(.6, rep(.04, 10))
commit = sample(0:10, 364, replace=TRUE, prob = probs)
#create day counter
day_counter = c(0:363)
#Create table
dat = data.frame(month = year_month, day = year_day, commit = commit, day_counter)
#add week_counter column using day_counter to arrange y = 7
dat = dat %>%
mutate(week_counter = day_counter %/% 7 + 1)
dat$y_axis = rep(1:7, 52)
knitr::include_graphics('bad.png')
knitr::include_graphics('bad.png')
knitr::include_graphics('good_1.png')
knitr::include_graphics('bad.png')
name = c("strawberry", "blueberry", "mint", "fruit", "purple", "fresh_red", "tropical", 'lemon", "turbo_red")
name = c("strawberry", "blueberry", "mint", "fruit",
"purple", "fresh_red", "tropical", 'lemon", "turbo_red")
name = c("strawberry", "blueberry", "mint", "fruit_tea",
"purple", "fresh_red", "tropical", "lemon", "turbo_red", "sparkle")
sweetness = c(4, 3, 1, 2, 3, 3, 4, 3, 3, 4)
cooling = c(2, 3, 5, 2, 3, 4, 2, 4, 2, 4)
entries = data.frame(name = name, sweetness = sweetness, commit = commit, cooling = cooling)
name = c("strawberry", "blueberry", "mint", "fruit_tea",
"purple", "fresh_red", "tropical", "lemon", "turbo_red", "sparkle")
sweetness = c(4, 3, 1, 2, 3, 3, 4, 3, 3, 4)
cooling = c(2, 3, 5, 2, 3, 4, 2, 4, 2, 4)
entries = data.frame(name = name, sweetness = sweetness, cooling = cooling)
entries
name = c("strawberry", "blueberry", "mint", "fruit_tea",
"purple", "fresh_red", "tropical", "lemon", "turbo_red", "sparkle")
sweetness = c(4, 3, 1, 2, 3, 3, 4, 3, 3, 4)
cooling = c(2, 3, 5, 2, 3, 4, 2, 4, 2, 4)
entries = data.frame(name = name, sweetness = sweetness, cooling = cooling)
entries
ggplot(entries, aes(x= sweetness, y= cooling, color="green", label=name))+
geom_point() +geom_text(aes(label=name),hjust=0, vjust=0)
name = c("strawberry", "blueberry", "mint", "fruit_tea",
"purple", "fresh_red", "tropical", "lemon", "turbo_red", "sparkle")
sweetness = c(4, 3, 1, 2, 3, 3, 4, 3, 3, 4)
cooling = c(2, 3, 5, 2, 3, 4, 2, 4, 2, 4)
entries = data.frame(name = name, sweetness = sweetness, cooling = cooling)
entries
ggplot(entries, aes(x= sweetness, y= cooling, color="green", label=name))+
geom_point() +
geom_text(aes(label=name),hjust=0, vjust=0)
name = c("strawberry", "blueberry", "mint", "fruit_tea",
"purple", "fresh_red", "tropical", "lemon", "turbo_red", "sparkle")
sweetness = c(4, 3, 1, 2, 3, 3, 4, 3, 3, 4)
cooling = c(2, 3, 5, 2, 3, 4, 2, 4, 2, 4)
entries = data.frame(name = name, sweetness = sweetness, cooling = cooling)
entries
ggplot(entries, aes(x= sweetness, y= cooling, label=name))+
geom_point() +
geom_text(aes(label=name))
name = c("strawberry", "blueberry", "mint", "fruit_tea",
"purple", "fresh_red", "tropical", "lemon", "turbo_red", "sparkle")
sweetness = c(4, 3, 1, 2, 3, 3, 4, 3, 3, 4)
cooling = c(2, 3, 5, 2, 3, 4, 2, 4, 2, 4)
entries = data.frame(name = name, sweetness = sweetness, cooling = cooling)
entries
ggplot(entries, aes(x= sweetness, y= cooling, label=name))+
geom_point() +
geom_text(aes(label=name),hjust=0, vjust=0)
name = c("strawberry", "blueberry", "mint", "fruit_tea",
"purple", "fresh_red", "tropical", "lemon", "turbo_red", "sparkle")
sweetness = c(4, 3, 1, 2, 3, 3, 4, 3, 3, 4)
cooling = c(2, 3, 5, 2, 3, 4, 2, 4, 2, 4)
entries = data.frame(name = name, sweetness = sweetness, cooling = cooling)
entries
ggplot(entries, aes(x= sweetness, y= cooling, color="green", label=name))+
geom_point() +
geom_text(aes(label=name),hjust=0, vjust=0)
name = c("strawberry", "blueberry", "mint", "fruit_tea",
"purple", "fresh_red", "tropical", "lemon", "turbo_red", "sparkle")
sweetness = c(4, 3, 1, 2, 3, 3, 4, 3, 3, 4)
cooling = c(2, 3, 5, 2, 3, 4, 2, 4, 2, 4)
entries = data.frame(name = name, sweetness = sweetness, cooling = cooling)
entries
ggplot(entries, aes(x= sweetness, y= cooling, color=name, label=name))+
geom_point() +
geom_text(aes(label=name),hjust=0, vjust=0)
name = c("strawberry", "blueberry", "mint", "fruit_tea",
"purple", "fresh_red", "tropical", "lemon", "turbo_red", "sparkle")
sweetness = c(4, 3, 1, 2, 3, 3, 4, 3, 3, 4)
cooling = c(2, 3, 5, 2, 3, 4, 2, 4, 2, 4)
entries = data.frame(name = name, sweetness = sweetness, cooling = cooling)
entries
ggplot(entries, aes(x= sweetness, y= cooling, color=name, label=name))+
geom_point() +
geom_text(aes(label=name), check_overlap = TRUE)
name = c("strawberry", "blueberry", "mint", "fruit_tea",
"purple", "fresh_red", "tropical", "lemon", "turbo_red", "sparkle")
sweetness = c(4, 3, 1, 2, 3, 3, 4, 3, 3, 4)
cooling = c(2, 3, 5, 2, 3, 4, 2, 4, 2, 4)
entries = data.frame(name = name, sweetness = sweetness, cooling = cooling)
entries
ggplot(entries, aes(x= sweetness, y= cooling, color=name, label=name))+
geom_point() +
geom_text(aes(label=name), position=position_jitter(width=1,height=1))
name = c("strawberry", "blueberry", "mint", "fruit_tea",
"purple", "fresh_red", "tropical", "lemon", "turbo_red", "sparkle")
sweetness = c(4, 3, 1, 2, 3, 3, 4, 3, 3, 4)
cooling = c(2, 3, 5, 2, 3, 4, 2, 4, 2, 4)
entries = data.frame(name = name, sweetness = sweetness, cooling = cooling)
entries
ggplot(entries, aes(x= sweetness, y= cooling, color=name, label=name))+
geom_point() +
geom_text_repel(aes(label=name))
name = c("strawberry", "blueberry", "mint", "fruit_tea",
"purple", "fresh_red", "tropical", "lemon", "turbo_red", "sparkle")
sweetness = c(4, 3, 1, 2, 3, 3, 4, 3, 3, 4)
cooling = c(2, 3, 5, 2, 3, 4, 2, 4, 2, 4)
entries = data.frame(name = name, sweetness = sweetness, cooling = cooling)
entries
ggplot(entries, aes(x= sweetness, y= cooling, color=name, label=name))+
geom_point() +
geom_text_repel(aes(label=name))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(ggrepel)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(ggrepel)
install.packages("ggrepel")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(ggrepel)
name = c("strawberry", "blueberry", "mint", "fruit_tea",
"purple", "fresh_red", "tropical", "lemon", "turbo_red", "sparkle")
sweetness = c(4, 3, 1, 2, 3, 3, 4, 3, 3, 4)
cooling = c(2, 3, 5, 2, 3, 4, 2, 4, 2, 4)
entries = data.frame(name = name, sweetness = sweetness, cooling = cooling)
#entries
ggplot(entries, aes(x= sweetness, y= cooling, color=name, label=name))+
geom_point() +
geom_text_repel(aes(label=name))
year_month = c(rep("Oct", 8), rep("Nov", 30), rep("Dec", 31),
rep("Jan", 31), rep("Feb", 28), rep("Mar", 31),
rep("Apr", 30), rep("May", 31), rep("Jun", 30),
rep("Jul", 31), rep("Aug", 31), rep("Sep", 30),
rep("Oct", 22))
year_day = c(c(24:31), c(1:30), c(1:31),
c(1:31), c(1:28), c(1:31),
c(1:30), c(1:31), c(1:30),
c(1:31), c(1:31), c(1:30),
c(1:22))
# commit numbers are initialized random
probs = c(.6, rep(.04, 10))
commit = sample(0:10, 364, replace=TRUE, prob = probs)
#create day counter
day_counter = c(0:363)
#Create table
dat = data.frame(month = year_month, day = year_day, commit = commit, day_counter)
#add week_counter column using day_counter to arrange y = 7
dat = dat %>%
mutate(week_counter = day_counter %/% 7 + 1)
dat$y_axis = rep(1:7, 52)
plot = ggplot(dat, aes(x=week_counter, y=y_axis)) +
geom_tile(aes(fill=commit), color = 'white') +
scale_fill_continuous(low = "#ededed", high = "#10570a") +
coord_fixed() +
theme_classic() +
labs(title = "number of commits past year", y="", x="week")
plot
plot = ggplot(dat, aes(x=week_counter, y=y_axis)) +
geom_tile(aes(fill=commit), color = 'white') +
scale_fill_continuous(low = "#ededed", high = "#10570a") +
coord_fixed() +
theme_classic() +
labs(title = "234 contributions in the last year", y="", x="Oct Nov   Dec     Jan     Feb    Mar    Apr    May    Jun    Jul    Aug    Sep    Oct")
plot
plot = ggplot(dat, aes(x=week_counter, y=y_axis)) +
geom_tile(aes(fill=commit), color = 'white') +
scale_fill_continuous(low = "#ededed", high = "#10570a") +
coord_fixed() +
theme_classic() +
labs(title = "234 contributions in the last year", y="", x="")
plot
x <- c(1, 2, 3, 4, 5)
X[TRUE]
x[TRUE]
c(3, 5, 7, 9)^c(1, 2)
oski = c('gpa1')
oski
oski$bear
oski = matrix()
position <- c('SG', 'PG', 'PF', 'SF', 'C')
factor(position)
oski$majorminor = c('ds', 'stat')
oski
oski$gpas = c(3.5, 3.9)
oski
c(oski$majorminor, oski$gpas)
length(c(oski$majorminor, oski$gpas))
dat = table()
oski
x = ("A", "B", "C")
x = c("A", "B", "C")
y = c(133, 134, 135)
z = c(TRUE, FALSE, FALSE)
dat = data.frame(x, y, z)
dat
dat$y
dat[,z]
dat[1,]
dat[["z"]]
dat[,"x"]
dat[,z]
dat[!c(FALSE, TRUE, TRUE),]
dat[["z"]]
dat[,z]
shiny::runApp('C:/Users/rmin2/Downloads')
runApp('C:/Users/rmin2/Downloads/app2.R')
ui <- fluidPage(
titlePanel("Title of your app"),
fluidRow(
# Initial portfolio
column(3,
numericInput(inputId = "games",
label = "Number of games:",
value = 10,
step = 1)
),
#
column(3,
h4("column2")  # delete this line and replace it with your widgets!!!
),
# Inputs for mean and standard deviation of annual inflation rates
column(3,
h4("column3")  # delete this line and replace it with your widgets!!!
),
# Inputs for number of simulations, and random seed
column(3,
h4("column4")  # delete this line and replace it with your widgets!!!
)
),
hr(),
h4('Dummy text for graph'),
plotOutput('plot'),
hr(),
h4('Dummy text for statistics'),
verbatimTextOutput('table')
)
ui <- fluidPage(
titlePanel("Title of your app"),
fluidRow(
# Initial portfolio
column(3,
numericInput(inputId = "games",
label = "Number of games:",
value = 10,
step = 1)
),
#
column(3,
h4("column2")  # delete this line and replace it with your widgets!!!
),
# Inputs for mean and standard deviation of annual inflation rates
column(3,
h4("column3")  # delete this line and replace it with your widgets!!!
),
# Inputs for number of simulations, and random seed
column(3,
h4("column4")  # delete this line and replace it with your widgets!!!
)
),
hr(),
h4('Dummy text for graph'),
plotOutput('plot'),
hr(),
h4('Dummy text for statistics'),
verbatimTextOutput('table')
)
server <- function(input, output) {
# you may need to create reactive objects
# (e.g. data frame to be used for graphing purposes)
dat <- reactive({
# replace the code below with your code!!!
data.frame(
MPG = mtcars$mpg,
HP = mtcars$hp
)
})
# code for graph
# (e.g. reactive data frame used for graphing purposes)
output$plot <- renderPlot({
# replace the code below with your code!!!
ggplot(data = dat(), aes(x = HP, y = MPG)) +
geom_point()
})
# code for statistics
output$table <- renderPrint({
# replace the code below with your code!!!
summary(dat())
})
}
shinyApp(ui = ui, server = server)
# replace the code below with your code!!!
ggplot(data = dat(), aes(x = HP, y = MPG)) +
geom_point()
# replace the code below with your code!!!
ggplot(data = dat(), aes(x = HP, y = MPG)) +
geom_point()
# replace the code below with your code!!!
ggplot(data = dat(), aes(x = HP, y = MPG)) +
geom_point()
# code for graph
# (e.g. reactive data frame used for graphing purposes)
output$plot <- renderPlot({
# replace the code below with your code!!!
ggplot(data = dat(), aes(x = HP, y = MPG)) +
geom_point()
})
# replace the code below with your code!!!
data.frame(
MPG = mtcars$mpg,
HP = mtcars$hp
)
# you may need to create reactive objects
# (e.g. data frame to be used for graphing purposes)
dat <- reactive({
# replace the code below with your code!!!
data.frame(
MPG = mtcars$mpg,
HP = mtcars$hp
)
})
# code for graph
# (e.g. reactive data frame used for graphing purposes)
output$plot <- renderPlot({
# replace the code below with your code!!!
ggplot(data = dat(), aes(x = HP, y = MPG)) +
geom_point()
})
# code for statistics
output$table <- renderPrint({
# replace the code below with your code!!!
summary(dat())
})
server <- function(input, output) {
# you may need to create reactive objects
# (e.g. data frame to be used for graphing purposes)
dat <- reactive({
# replace the code below with your code!!!
data.frame(
MPG = mtcars$mpg,
HP = mtcars$hp
)
})
# code for graph
# (e.g. reactive data frame used for graphing purposes)
output$plot <- renderPlot({
# replace the code below with your code!!!
ggplot(data = dat(), aes(x = HP, y = MPG)) +
geom_point()
})
# code for statistics
output$table <- renderPrint({
# replace the code below with your code!!!
summary(dat())
})
}
shinyApp(ui = ui, server = server)
source("C:/Users/rmin2/Desktop/stat133/proj2/proj2.R")
runApp('C:/Users/rmin2/Downloads/app2.R')
source("C:/Users/rmin2/Desktop/stat133/proj2/proj2.R")
runApp('C:/Users/rmin2/Downloads/app2.R')
source("C:/Users/rmin2/Desktop/stat133/proj2/proj2.R")
runApp('C:/Users/rmin2/Downloads')
runApp('C:/Users/rmin2/Desktop/stat133/proj2/proj2.R')
source("C:/Users/rmin2/Desktop/stat133/proj2/proj2.R")
source("C:/Users/rmin2/Desktop/stat133/proj2/proj2.R")
source("C:/Users/rmin2/Desktop/stat133/proj2/proj2.R")
runApp('C:/Users/rmin2/Downloads/app2.R')
runApp('C:/Users/rmin2/Desktop/stat133/proj2/proj2.R')
runApp('C:/Users/rmin2/Downloads')
runApp('app3.R')
runApp('app3.R')
runApp('C:/Users/rmin2/Downloads/app3.R')
?plotOutput
source("C:/Users/rmin2/Desktop/stat133/proj2/proj2.R")
source("C:/Users/rmin2/Desktop/stat133/proj2/proj2.R")
runApp('C:/Users/rmin2/Desktop/stat133/proj2/proj2.R')
source("C:/Users/rmin2/Desktop/stat133/proj2/proj2.R")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
rnorm(10, mean = 0, sd = 1)
rnorm(10, mean = 0, sd = 1)[1]
source("C:/Users/rmin2/Desktop/stat133/proj2/proj2.R")
runApp('C:/Users/rmin2/Desktop/stat133/proj2/proj2.R')
source("C:/Users/rmin2/Desktop/stat133/proj2/proj2.R")
runApp('C:/Users/rmin2/Desktop/stat133/proj2/proj2.R')

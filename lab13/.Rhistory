knitr::opts_chunk$set(echo = TRUE)
# assuming data file is in the same directory of your Rmd
tweets <- read.csv('text-emotion.csv', stringsAsFactors = FALSE)
# your code
tweets
# your code
tweets$author
# your code
head(tweets$author)
library(tidyverse)
# your code
tweets$author
str_detect(tweets$author, "[:alpha:]{0,10}")
# your code
tweets %>%
filter(str_detect(tweets$author, "[:alpha:]{1,15}"))
# your code
tweets %>%
which(str_detect(tweets$author, "[:alpha:]{1,15}") = FALSE)
# your code
tweets %>%
which(str_detect(tweets$author, "[:alpha:]{1,15}") == FALSE)
# your code
which(tweets %>% str_detect(author, "[:alpha:]{1,15}") == FALSE)
# your code
which(tweets %>% str_detect(tweets$author, "[:alpha:]{1,15}") == FALSE)
shiny::runApp('~/proj')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(spData)
library(gganimate)
col_names = c(
"SID",
"SEASON",
"NUMBER",
"BASIN",
"SUBBASIN",
"NAME",
"ISO_TIME",
"NATURE",
"LAT",
"LON",
"WMO_WIND",
"WMO_PRES",
"WMO_AGENCY",
"TRACK_TYPE",
"DIST2LAND",
"LANDFALL"
)
col_types = c(
"character",
"integer",
"integer",
"character",
"character",
"character",
"character",
"character",
"double",
"double",
"integer",
"integer",
"character",
"character",
"integer",
"integer"
)
data = read.csv(
file = "ibtracs.NA.list.v04r00.csv",
colClasses = c(col_types, rep("NULL", 147)),
stringsAsFactors = FALSE,
skip = 77876,
na.strings = c("")
)
colnames(data) = col_names
head(data)
data
data$ISO_TIME = as.POSIXct(data$ISO_TIME)
data$MONTH <- lubridate::month(data$ISO_TIME)
head(data)
str(data, vec.len = 1)
data %>%
group_by(NATURE) %>%
count()
data %>%
group_by(BASIN) %>%
count()
hurricanes = data %>%
drop_na(WMO_WIND) %>%
group_by(SID) %>%
filter(!any(max(WMO_WIND) <= 64))
hurricanes
raw_year_count = hurricanes %>%
group_by(SEASON) %>%
summarise(count = n_distinct(SID))
raw_year_count
ggplot(raw_year_count, aes(SEASON, count)) + geom_line()
ggplot(raw_year_count, aes(SEASON, count)) +
geom_point() +
geom_smooth(method='lm')
x_season = raw_year_count$SEASON
y_count = raw_year_count$count
relation = lm(formula = y_count ~ x_season)
summary(relation)
hurricane_mean = hurricanes %>%
drop_na(WMO_WIND) %>%
group_by(SID, SEASON) %>%
summarise_at(vars(WMO_WIND), list(WMO_WIND_mean = mean))
hurricane_mean
hurricane_max_mean_by_year =
hurricane_mean %>%
group_by(SEASON) %>%
summarise(WIND_max = max(WMO_WIND_mean), WIND_mean = mean(WMO_WIND_mean))
hurricane_max_mean_by_year
dorian_anim
